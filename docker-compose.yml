services:
  traefik:
    image: ${TRAEFIK_VERSION}
    container_name: traefik_service
    restart: always
    labels:
      - "traefik.enable=true" # Activation de Traefik
      - "traefik.http.routers.api.rule=Host(`${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.api.tls.certresolver=le"
      # Middleware pour la redirection de HTTP vers HTTPS
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      # Middleware pour l'authentification
      - "traefik.http.routers.api.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${BASIC_AUTH}"
    command:
      - "--log.level=info" # Niveau de log
      - "--api.insecure=false"
      - "--api.dashboard=true" # Active le dashboard
      - "--providers.docker"
      - "--entrypoints.web.address=:${HTTP_PORT}"
      - "--entrypoints.websecure.address=:${HTTPS_PORT}"
      - "--certificatesresolvers.le.acme.email=${EMAIL}"
      - "--certificatesresolvers.le.acme.storage=/acme/acme.json"
      - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
      # Set AccessLog
      - "--accesslog=true"
      - "--accesslog.filepath=/logs/access.log"
      - "--accesslog.bufferingsize=100"
      - "--accesslog.fields.defaultmode=keep"
      - "--accesslog.fields.names.ClientUsername=drop"
      - "--accesslog.fields.headers.defaultmode=keep"
      - "--accesslog.format=json"
      - "--accesslog.filters.statusCodes=400-599"
    ports:
      - "${HTTP_PORT}:80"
      - "${HTTPS_PORT}:443"  # Port HTTPS personnalisé
    volumes:
      - "${DOCKER_SOCK}:${DOCKER_SOCK}"
      - traefik_certs:/acme
      - "./logs/:/logs"  # Montre le répertoire pour stocker les logs d'accès
    networks:
      - traefik_network
    depends_on:
      - init-acme
  nginx-test:
    image: nginx:latest
    container_name: nginx_test
    restart: always
    volumes:
      - ./test-page:/usr/share/nginx/html:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-test.rule=Host(`vps-ovh.${DOMAIN}`)"
      - "traefik.http.routers.nginx-test.entrypoints=websecure"
      - "traefik.http.routers.nginx-test.tls.certresolver=le"
    networks:
      - traefik_network
    depends_on:
      - traefik
  init-acme:
    image: alpine:latest
    container_name: init_acme
    command: [ "/bin/sh", "-c", "touch /acme/acme.json && chmod 600 /acme/acme.json" ]
    volumes:
      - traefik_certs:/acme
    restart: "no"

networks:
  traefik_network:
    external: true

volumes:
  traefik_certs:
    name: traefik_certs
    driver: local
